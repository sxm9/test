name: terraform backend and state lock setup

on:
  workflow_dispatch:
    inputs:
      client_name:
        type: choice
        description: Tenant name to setup the infra
        options: 
        - pre_requisite


defaults:
  run:
    working-directory: pre-requisite
        
env: 
  S3_TFVARS_BUCKET: "test123hdjs"
  REGION: "us-east-1"
      
jobs:
  setup:

    runs-on: ubuntu-18.04
    
    steps:
    - name: checkout code
      uses: actions/checkout@v2
      
    - name: "Configure AWS Credentials" 
      uses: aws-actions/configure-aws-credentials@v1
      with:
       aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: ${{ env.REGION }}

   # - name: fetch tfvars file
   #   run: |
   #     aws s3 cp s3://${S3_TFVARS_BUCKET}/${{ github.event.inputs.client_name }}/${{ github.event.inputs.client_name }}.tfvars .
   #     cat ${{ github.event.inputs.client_name }}.tfvars
      
    - name: setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.13.0

    - name: terraform fmt
      id: fmt
      run: terraform fmt -check -recursive -no-color .
      continue-on-error: true

    - name: terraform init
      id: init
      run: terraform init -no-color
        
    - name: list workspaces
      run: terraform workspace list 
      


#  validate:
#    needs:
#    - setup
#    
#    runs-on: ubuntu-18.04
#    
#    steps:   
#    - name: checkout code
#      uses: actions/checkout@v2

    - name: terraform validate
      id: validate
      run: terraform validate -no-color


      
  plan:
    needs:
    - setup
    
    runs-on: ubuntu-18.04   
    
    steps:
    - name: checkout code
      uses: actions/checkout@v2
      
    - name: "Configure AWS Credentials" 
      uses: aws-actions/configure-aws-credentials@v1
      with:
       aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: ${{ env.REGION }}  
      
    - name: fetch tfvars file
      run: |
        aws s3 cp s3://${S3_TFVARS_BUCKET}/${{ github.event.inputs.client_name }}/${{ github.event.inputs.client_name }}.tfvars .

    - name: terraform plan
      id: plan
      run: terraform plan -out ${{ github.event.inputs.client_name }}.plan -var-file=${{ github.event.inputs.client_name }}.tfvars
    
    - uses: actions/upload-artifact@v3
      if: always()
      with:
       name: ${{ github.event.inputs.client_name }}_plan
       path: ${{ github.event.inputs.client_name }}.plan
      
  apply:
    needs:
    - plan
    
    runs-on: ubuntu-18.04
    
    steps:   
    - name: "Configure AWS Credentials" 
      uses: aws-actions/configure-aws-credentials@v1
      with:
       aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: ${{ env.REGION }}
       
    - uses: actions/download-artifact@v2
      with:
        name: my-artifact   

    - name: terraform apply
      id: apply
      run: terraform apply ${{ github.event.inputs.client_name }}.plan
      
      
      
    
